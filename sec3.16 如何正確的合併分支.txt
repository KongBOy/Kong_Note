sec 3.16 如何正確的合併分支
	1.先checkout到 merge的目的地
		例如：想要 develope 合併到 master，
			git checkout master → 先切換到master
	2.git merge develope → 注意要先 git checkout master 在執行這行，把develop合併到master裡面
		補充：merge預設是用fast-forward的方式來merge，意思是如果develope是master的未來版，master不會建立新commit，而是直接合併進develope裡這樣子
		
sec 3.17 如何在命令列下查看「版本線圖」
	git log --oneline
	git log --graph
	git log --oneline --graph
	git log --oneline --graph --all
	
sec 3.18 merge發生衝突怎麼解決
	git checkout master(或你要merge的目的地)
	git merge develope，假設此時發生衝突，顯示訊息如下
		CONFLICT (add/add): Merge conflict in d.txt
		Auto-merging d.txt
		Automatic merge failed; fix conflicts and then commit the result.
		何時發生：要merge的兩個branch 修改到了 相同檔案 的 相同行數 的地方
		如何解決：發生conflict時，打git status 會顯示如下訊息
		On branch master
		You have unmerged paths.
		  (fix conflicts and run "git commit")
		  (use "git merge --abort" to abort the merge)

		Unmerged paths:
		  (use "git add <file>..." to mark resolution)

				both added:      d.txt

		no changes added to commit (use "git add" and/or "git commit -a")
		
		
		git "會去修改" 發生衝突的檔案，我們要做的就是，把發生衝突的檔案裡的git資訊整理好即可，所以過程如下
			1.用文字編輯器 整理 被git修改過的 衝突檔案 裡的 git資訊，儲存並離開文字編輯器
			2.「git add 衝突的檔案」或「git add .」也可以，add完打git status會顯示如下：
				On branch master
				All conflicts fixed but you are still merging.
				  (use "git commit" to conclude merge)

				Changes to be committed:

						modified:   d.txt

			3.git commit 不用-m，會跳出來 應該是conflict專門的 commit文字訊息，可以自己打或者把他自動生成的文字訊息前面的#拿掉
			  git commit 要用-m 也可以，就如平常輸入message一樣
			
		